#!/bin/bash
set -euo pipefail

# AET CLI - Autonomous Engineering Team Management

COMMAND=${1:-help}
shift || true

case "$COMMAND" in
    init)
        echo "Initializing AET system..."
        python3 .claude/system/aet.py init
        ;;
    
    create)
        if [ $# -lt 1 ]; then
            echo "Usage: aet create <task_description>"
            exit 1
        fi
        python3 .claude/system/aet.py create "$*"
        ;;
    
    process)
        echo "Processing tasks..."
        if [ "${1:-}" = "--serial" ]; then
            python3 .claude/system/aet.py process --serial
        else
            python3 .claude/system/aet.py process
        fi
        ;;
    
    status)
        python3 .claude/system/aet.py status
        ;;
    
    logs)
        if [ $# -lt 1 ]; then
            python3 .claude/system/aet.py logs
        else
            python3 .claude/system/aet.py logs --ticket "$1"
        fi
        ;;
    
    verify)
        python3 .claude/system/aet.py verify
        ;;
    
    reconcile)
        if [ -f .claude/system/verify_consistency.py ]; then
            python3 .claude/system/verify_consistency.py reconcile
        else
            echo "Consistency verifier not available"
        fi
        ;;
    
    metrics)
        python3 .claude/system/aet.py metrics
        ;;
    
    health)
        python3 .claude/system/aet.py health
        ;;
    
    dlq)
        case "${1:-list}" in
            list)
                python3 .claude/system/dlq_manager.py list
                ;;
            retry)
                if [ $# -lt 2 ]; then
                    echo "Usage: aet dlq retry <ticket_id>"
                    exit 1
                fi
                python3 .claude/system/dlq_manager.py retry "$2"
                ;;
            remove)
                if [ $# -lt 2 ]; then
                    echo "Usage: aet dlq remove <ticket_id>"
                    exit 1
                fi
                python3 .claude/system/dlq_manager.py remove "$2"
                ;;
            details)
                if [ $# -lt 2 ]; then
                    echo "Usage: aet dlq details <ticket_id>"
                    exit 1
                fi
                python3 .claude/system/dlq_manager.py details "$2"
                ;;
        esac
        ;;
    
    backup)
        python3 .claude/system/rollback.py backup "${1:-manual}"
        ;;
    
    rollback)
        if [ $# -lt 1 ]; then
            python3 .claude/system/rollback.py list
        else
            python3 .claude/system/rollback.py rollback "$1"
        fi
        ;;
    
    km)
        case "${1:-status}" in
            start)
                bash .claude/system/start_km.sh
                ;;
            stop)
                if [ -f .claude/km.pid ]; then
                    PID=$(cat .claude/km.pid)
                    echo "Stopping Knowledge Manager (PID: $PID)..."
                    kill $PID || true
                    rm .claude/km.pid
                    echo "✓ Knowledge Manager stopped"
                else
                    echo "Knowledge Manager not running"
                fi
                ;;
            status)
                if [ -f .claude/km.pid ]; then
                    PID=$(cat .claude/km.pid)
                    if ps -p $PID > /dev/null 2>&1; then
                        echo "✓ KM running with PID: $PID"
                        echo "URL: http://127.0.0.1:5001"
                    else
                        echo "✗ KM not running (stale PID file)"
                        rm .claude/km.pid
                    fi
                else
                    echo "✗ KM not running"
                fi
                ;;
            restart)
                # Stop if running
                if [ -f .claude/km.pid ]; then
                    PID=$(cat .claude/km.pid)
                    kill $PID || true
                    rm .claude/km.pid
                    sleep 1
                fi
                # Start
                bash .claude/system/start_km.sh
                ;;
        esac
        ;;
    
    test)
        echo "Running system test..."
        # Create a simple test task
        TICKET_ID=$(python3 .claude/system/aet.py create "Test task: verify system functionality")
        echo "Created test ticket: $TICKET_ID"
        
        # Show status
        echo ""
        echo "Current status:"
        python3 .claude/system/aet.py status
        
        echo ""
        echo "Test completed. Check status with: aet status"
        ;;
    
    help)
        cat << EOF
AET - Autonomous Engineering Team CLI

Usage: aet <command> [options]

Commands:
  init                 Initialize AET system
  create <desc>        Create new task
  process              Process pending tasks (parallel)
  process --serial     Process tasks serially
  status               Show task status
  logs [ticket_id]     View event logs
  verify               Verify file consistency
  reconcile            Fix consistency issues
  metrics              Show system metrics
  health               Check system health
  
  dlq list             List failed tasks
  dlq retry <id>       Retry failed task
  dlq remove <id>      Remove failed task
  dlq details <id>     Show task details
  
  backup [label]       Create backup
  rollback [name]      Rollback to backup
  
  km start             Start Knowledge Manager
  km stop              Stop Knowledge Manager
  km status            KM server status
  km restart           Restart Knowledge Manager
  
  test                 Run system test
  help                 Show this help

Examples:
  aet init
  aet create "Implement user authentication"
  aet process
  aet status
  aet metrics
  aet backup pre-deploy
  aet dlq retry TICKET-123
  
System Requirements:
  - Python 3.7+
  - Git (optional but recommended)
  - Flask (installed automatically)
  - sentence-transformers (optional for semantic search)

For more information, see the documentation in .claude/README.md
EOF
        ;;
    
    *)
        echo "Unknown command: $COMMAND"
        echo "Run 'aet help' for usage"
        exit 1
        ;;
esac